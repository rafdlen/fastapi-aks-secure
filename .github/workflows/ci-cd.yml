name: ci-cd

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python SAST (Bandit)
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt bandit
          bandit -r app || true  # set to fail later if desired

      - name: Build Docker image
        run: docker build -t fastapi-aks-secure:${{ github.sha }} .

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: fastapi-aks-secure:${{ github.sha }}
          format: 'table'
          exit-code: '0'  # set to '1' to fail on vulns

  deploy:
    needs: build-test-scan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # OIDC
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login -n ${{ secrets.ACR_NAME }}

      - name: Build & Push
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: |
          IMG=${ACR_NAME}.azurecr.io/fastapi-aks-secure:${GITHUB_SHA::7}
          docker build -t $IMG .
          docker push $IMG
          echo "IMG=$IMG" >> $GITHUB_ENV

      - name: Get AKS credentials
        run: az aks get-credentials -n ${{ secrets.AKS_NAME }} -g ${{ secrets.AKS_RG }} --overwrite-existing

      - name: Helm upgrade/install
        run: |
          REPO=${{ env.IMG%:* }}
          TAG=${{ env.IMG##*: }}
          helm upgrade --install fastapi ./helm \
            --set image.repository=$REPO \
            --set image.tag=$TAG \
            --set env.TENANT=${{ secrets.AZURE_TENANT_ID }} \
            --set env.AUD=${{ secrets.AZURE_APP_CLIENT_ID }} \
            --set keyVault.name=${{ secrets.KV_NAME }} \
            --set keyVault.tenantId=${{ secrets.AZURE_TENANT_ID }}

